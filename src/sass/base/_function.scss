@use "sass:math";
// to %
@function prc($pxOne, $pxTwo) {          //* чтобы вызвать пишем rem(20, 300) к примеру
    $result: math.div($pxOne, $pxTwo) * 100%;
    @return $result;
}
//rem
@function rem($px) {          //* чтобы вызвать пишем rem(20) к примеру
    $result: math.div($px, 16) + rem;
    @return $result;
}
//em
@function em($px) {             //* чтобы вызвать пишем rem(20) к примеру
    $result: math.div($px, 16) + em;
    @return $result;
}

// адаптивное свойство


$maxWidth: 1920;
$maxWidthContainer: 1920;

@mixin adaptiv-value($property, $starSize, $minSize, $type) {      //* чтобы вызвать пишем @include adaptiv-value('font-size', 20, 10, 0)  к примеру   0 - это третье условие
    $addSize: $starSize - $minSize;
    @if $type == 1 {
        //только если меньше контейнера
        #{$property}: $starSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{maxWidthContainer - 320}));
        }
    }
    @if $type == 2 {
        //только если больше контейнера
        #{$property}: $starSize + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    } @else {
        //всегда
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}
